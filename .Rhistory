round(mean(seconds(timing$WLST_to_PEA), na.rm = TRUE)/60, 0),
" minutes."),
paste0("The average time it took for WLST to no MCA signal was: ",
round(mean(seconds(timing$WLST_to_MCA), na.rm = TRUE)/60, 0),
" minutes."),
paste0("The average time it took for WLST to no PCA signal was: ",
round(mean(seconds(timing$WLST_to_PCA), na.rm = TRUE)/60, 0),
" minutes."))
) %>%
print()
2370/60
1789/60
6580/60
DATA_REPOSITORY_PATH <- "C:/Users/Rebecca/Desktop/Dal/alamar_data.xlsx"
tags <- "C:/Users/Rebecca/Desktop/Dal/alamar_CNS120_information.xlsx"
# Reading in the Alamar NULISA NPQ data
df <- read_excel(path = DATA_REPOSITORY_PATH,
sheet = "plasma_proteomics")
x <- c("tidyverse", "ggpubr", "knitr", "kableExtra", "rstatix", "latex2exp", "plotly",
"rlang", "broom", "broom.mixed", "RColorBrewer", "ggsci", "readxl",
"lubridate", "lme4", "magick", "cowplot", "markdown", "viridis", "ggrepel", "ggExtra")
lapply(x, library, character.only = TRUE)
rm(x)
DATA_REPOSITORY_PATH <- "C:/Users/Rebecca/Desktop/Dal/alamar_data.xlsx"
tags <- "C:/Users/Rebecca/Desktop/Dal/alamar_CNS120_information.xlsx"
# Reading in the Alamar NULISA NPQ data
df <- read_excel(path = DATA_REPOSITORY_PATH,
sheet = "plasma_proteomics")
View(df)
# Filtering out the quality control data
df <- df %>% filter(!is.na(Timepoint))
# Pivoting biomarkers longer and seperating IDs into an etiology column
df <- df %>%
pivot_longer(!(Study:Matrix), names_to = "BIOMARKER", values_to = "CONCENTRATION") %>%
rename(TIMEPOINT = Timepoint,
VESSEL = Vessel) %>%
mutate(ID2 = ID) %>%
separate(ID2, into = c("ETIOLOGY", NA), sep = " ", extra = "drop") %>%
relocate(ETIOLOGY, ID, TIMEPOINT, VESSEL, BIOMARKER, CONCENTRATION) %>%
select(!c(Study, Matrix))
View(df)
unique(df$VESSEL)
# Only using the arterial data
df <- df %>% filter(VESSEL == "Arterial")
## THEORY BEHIND DATA MANIPULATION
# Data is represented as log2 data so in order for gradient analysis to take place, data first needs to be exponentiated.
# Once data is exponentiated, it can be subtracted for cerebral gradient analysis (Arterial - Jugular venous).
# The sign of the AV analysis the tells you the direction of exchange but we can't log transform negative numbers.
# Data is thus converted to either uptake or release from the brain based on the sign for the AV gradient.
# All data is then taken as absolute values and log transformed where the negative sign is then added back depending on whether
# concentration values are greater or less than 1 as that can lead to improper direction of analysis.
df_av <- df %>%
rename(log2 = CONCENTRATION) %>%
mutate(ABS = 2^log2) %>%
select(!log2) %>%
pivot_wider(names_from = VESSEL, values_from = ABS) %>%
mutate(AV = if_else(!is.na(Arterial) & !is.na(Jugular), Arterial-Jugular, NA)) %>%
pivot_longer(c(Arterial, Jugular, AV), names_to = "VESSEL", values_to = "ABS") %>%
mutate(SIGN = if_else(VESSEL == "AV" & ABS > 0, "Uptake", NA),
SIGN = if_else(VESSEL == "AV" & ABS < 0, "Release", SIGN),
log2 = log2(abs(ABS)),
log2 = if_else(SIGN == "Release" & log2 > 1, -1*log2, log2),
log2 = if_else(is.na(SIGN), log2(abs(ABS)), log2),
log2 = if_else(ABS == 0, 0, log2)) %>%
filter(!is.na(ABS))
# Reading in the Alamar NULISA NPQ data
df <- read_excel(path = DATA_REPOSITORY_PATH,
sheet = "plasma_proteomics")
# Filtering out the quality control data
df <- df %>% filter(!is.na(Timepoint))
# Pivoting biomarkers longer and seperating IDs into an etiology column
df <- df %>%
pivot_longer(!(Study:Matrix), names_to = "BIOMARKER", values_to = "CONCENTRATION") %>%
rename(TIMEPOINT = Timepoint,
VESSEL = Vessel) %>%
mutate(ID2 = ID) %>%
separate(ID2, into = c("ETIOLOGY", NA), sep = " ", extra = "drop") %>%
relocate(ETIOLOGY, ID, TIMEPOINT, VESSEL, BIOMARKER, CONCENTRATION) %>%
select(!c(Study, Matrix))
## THEORY BEHIND DATA MANIPULATION
# Data is represented as log2 data so in order for gradient analysis to take place, data first needs to be exponentiated.
# Once data is exponentiated, it can be subtracted for cerebral gradient analysis (Arterial - Jugular venous).
# The sign of the AV analysis the tells you the direction of exchange but we can't log transform negative numbers.
# Data is thus converted to either uptake or release from the brain based on the sign for the AV gradient.
# All data is then taken as absolute values and log transformed where the negative sign is then added back depending on whether
# concentration values are greater or less than 1 as that can lead to improper direction of analysis.
df_av <- df %>%
rename(log2 = CONCENTRATION) %>%
mutate(ABS = 2^log2) %>%
select(!log2) %>%
pivot_wider(names_from = VESSEL, values_from = ABS) %>%
mutate(AV = if_else(!is.na(Arterial) & !is.na(Jugular), Arterial-Jugular, NA)) %>%
pivot_longer(c(Arterial, Jugular, AV), names_to = "VESSEL", values_to = "ABS") %>%
mutate(SIGN = if_else(VESSEL == "AV" & ABS > 0, "Uptake", NA),
SIGN = if_else(VESSEL == "AV" & ABS < 0, "Release", SIGN),
log2 = log2(abs(ABS)),
log2 = if_else(SIGN == "Release" & log2 > 1, -1*log2, log2),
log2 = if_else(is.na(SIGN), log2(abs(ABS)), log2),
log2 = if_else(ABS == 0, 0, log2)) %>%
filter(!is.na(ABS))
# Testing normality of distribution for data using the Shapiro-Wilkes Test
df_av <- df_av %>%
select(!ABS) %>%
group_by(TIMEPOINT, BIOMARKER, VESSEL) %>%
nest() %>%
mutate(Shapiro = map(data, ~rstatix::shapiro_test(.x$log2))) %>%
unnest(Shapiro) %>%
select(!c(variable, statistic)) %>%
rename(SW = p.value)
# Overwriting the previous dataframe to analyze the difference between Pre-WLST to Post-WLST samples
df_av_temp <- df_av %>%
filter(TIMEPOINT %in% c("Pre", "Post")) %>%
filter(VESSEL == "Arterial") %>%
mutate(TIMEPOINT = factor(TIMEPOINT,
levels = c("Pre", "Post"),
ordered = TRUE)) %>%
unnest(data) %>%
## Have to exclude HIBI 25 because it does not have paired samples for this analysis
filter(ID != "HIBI 25") %>%
ungroup() %>%
group_by(BIOMARKER, VESSEL) %>%
nest() %>%
mutate(maxSW = map(data, ~.x %>% summarize(max_value = max(SW, na.rm = TRUE)))) %>%
unnest(maxSW) %>%
rename(gShapiroWilks = max_value) %>%
mutate(TEST = if_else(gShapiroWilks < 0.05, "Wilcoxon Signed-Rank Test", "Paired T-Test")) %>%
mutate(model = if_else(TEST == "Paired T-Test",
map(data, ~t_test(data = .x, log2 ~ TIMEPOINT, paired = TRUE)),
map(data, ~wilcox_test(data = .x, log2 ~ TIMEPOINT, paired = TRUE)))) %>%
mutate(EffectSize = if_else(TEST == "Paired T-Test",
map(data, ~cohens_d(data = .x, log2 ~ TIMEPOINT, var.equal = TRUE, paired = TRUE)),
map(data, ~wilcox_effsize(data = .x, log2 ~ TIMEPOINT, paired = TRUE)))) %>%
mutate(model = map(model, ~.x %>% select(p)),
EffectSize = map(EffectSize, ~.x %>% select(c(effsize, magnitude)) %>% mutate(magnitude = as.character(magnitude)))) %>%
unnest(model, EffectSize) %>%
mutate(`Effect Size Test` = if_else(TEST == "Paired T-Test", "Cohen's D", "Wilcoxon effect size (r)")) %>%
rename(pvalue = p) %>%
select(!gShapiroWilks)
View(df_av_temp)
# Creating fold change data for the arterial plasma proteome from Pre-WLST to Post-WLST
temp <- df_av_temp %>%
mutate(FC = map(data, ~.x %>%
group_by(TIMEPOINT) %>%
summarize(mean = mean(log2)) %>%
pivot_wider(names_from = "TIMEPOINT", values_from = "mean") %>%
mutate(FC = Post - Pre) %>%
select(FC))) %>%
unnest(FC)
View(temp)
View(temp[[3]][[1]])
# Creating the statistics data frame that will be used in making  eFigure 7C
temp_stats <- temp %>%
filter(VESSEL == "Arterial") %>%
select(BIOMARKER, data, pvalue)
temp1 <- temp_stats %>% unnest(data)
efig7c <- temp1 %>%
mutate(TIMEPOINT = factor(TIMEPOINT,
levels = c("Pre", "Post"),
labels = c("Pre-WLST", "SBP <60 mmHg"))) %>%
rename(Timepoint = TIMEPOINT) %>%
ggplot(., aes(x = log2, y = fct_rev(BIOMARKER), color = Timepoint, group = Timepoint), shape = 18) +
geom_hline(yintercept = seq(0, 130, 1), color = "grey", alpha = 0.3, linewidth = 0.5) +
geom_point(alpha = 0.2) +
geom_text(data = temp_stats,
aes(x = 28, y = BIOMARKER, label = paste("P =", signif(pvalue, digits = 2))),
inherit.aes = FALSE,
hjust = 0,
vjust = 0.5,
fontface = 4,
size = 2.8) +
stat_summary(geom = "point", size = 2, alpha = 0.8) +
xlab("Concentration (NPQ)") +
scale_x_continuous(limits = c(0, 33),
breaks = seq(0, 30, 5),
expand = c(0.1,0.1)) +
scale_y_discrete(expand = c(0,2)) +
theme_pubr(legend = "bottom") +
scale_color_npg() +
theme(axis.text.y = element_text(hjust = 0, size = 8, face = "bold"),
axis.title.y = element_blank(),
axis.line.y = element_line(color = "black"))
efig7c
View(temp)
View(temp1)
temp1 <- temp_stats %>% unnest(data) %>% select(!SIGN)
View(temp_stats)
View(temp_stats[[3]][[1]])
# Calculating the false discovery rate (FDR) of the Pre-WLST to Post-WLST biomarker data
temp <- temp %>%
select(!data) %>%
arrange(pvalue) %>%
group_by(VESSEL) %>%
nest() %>%
mutate(data = map(data, ~.x %>% mutate(p.adj = pvalue*(length(pvalue)/row_number(pvalue))))) %>%
unnest(data) %>%
mutate(effsize = abs(effsize),
p.adj = if_else(p.adj > 1, 1, p.adj))
View(temp)
tags <- read_excel(path = tags) %>%
select(Gene, Category) %>%
rename(BIOMARKER = Gene)
View(tags)
test <- temp %>% merge(tags, all = TRUE)
View(test)
View(df_av)
View(df_av[[4]][[1]])
View(df_av[[4]][[614]])
DATA_REPOSITORY_PATH <- "C:/Users/Rebecca/Desktop/Dal/alamar_data.xlsx"
tags <- "C:/Users/Rebecca/Desktop/Dal/alamar_CNS120_information.xlsx"
# Reading in the Alamar NULISA NPQ data
df <- read_excel(path = DATA_REPOSITORY_PATH,
sheet = "plasma_proteomics")
# Filtering out the quality control data
df <- df %>% filter(!is.na(Timepoint))
# Pivoting biomarkers longer and seperating IDs into an etiology column
df <- df %>%
pivot_longer(!(Study:Matrix), names_to = "BIOMARKER", values_to = "CONCENTRATION") %>%
rename(TIMEPOINT = Timepoint,
VESSEL = Vessel) %>%
mutate(ID2 = ID) %>%
separate(ID2, into = c("ETIOLOGY", NA), sep = " ", extra = "drop") %>%
relocate(ETIOLOGY, ID, TIMEPOINT, VESSEL, BIOMARKER, CONCENTRATION) %>%
select(!c(Study, Matrix))
## THEORY BEHIND DATA MANIPULATION
# Data is represented as log2 data so in order for gradient analysis to take place, data first needs to be exponentiated.
# Once data is exponentiated, it can be subtracted for cerebral gradient analysis (Arterial - Jugular venous).
# The sign of the AV analysis the tells you the direction of exchange but we can't log transform negative numbers.
# Data is thus converted to either uptake or release from the brain based on the sign for the AV gradient.
# All data is then taken as absolute values and log transformed where the negative sign is then added back depending on whether
# concentration values are greater or less than 1 as that can lead to improper direction of analysis.
df <- df %>%
rename(log2 = CONCENTRATION) %>%
mutate(ABS = 2^log2) %>%
select(!log2) %>%
pivot_wider(names_from = VESSEL, values_from = ABS) %>%
mutate(AV = if_else(!is.na(Arterial) & !is.na(Jugular), Arterial-Jugular, NA)) %>%
pivot_longer(c(Arterial, Jugular, AV), names_to = "VESSEL", values_to = "ABS") %>%
mutate(SIGN = if_else(VESSEL == "AV" & ABS > 0, "Uptake", NA),
SIGN = if_else(VESSEL == "AV" & ABS < 0, "Release", SIGN),
log2 = log2(abs(ABS)),
log2 = if_else(SIGN == "Release" & log2 > 1, -1*log2, log2),
log2 = if_else(is.na(SIGN), log2(abs(ABS)), log2),
log2 = if_else(ABS == 0, 0, log2)) %>%
filter(!is.na(ABS))
# Testing normality of distribution for data using the Shapiro-Wilkes Test
df <- df %>%
select(!ABS) %>%
group_by(TIMEPOINT, BIOMARKER, VESSEL) %>%
nest() %>%
mutate(Shapiro = map(data, ~rstatix::shapiro_test(.x$log2))) %>%
unnest(Shapiro) %>%
select(!c(variable, statistic)) %>%
rename(SW = p.value)
View(df)
View(df[[4]][[1]])
View(df[[4]][[471]])
# Overwriting the previous dataframe to analyze the difference between Pre-WLST to Post-WLST samples using only arterial samples
df_test <- df %>%
filter(TIMEPOINT %in% c("Pre", "Post")) %>%
filter(VESSEL == "Arterial") %>%
mutate(TIMEPOINT = factor(TIMEPOINT,
levels = c("Pre", "Post"),
ordered = TRUE)) %>%
unnest(data) %>%
## Have to exclude HIBI 25 because it does not have paired samples for this analysis
filter(ID != "HIBI 25") %>%
ungroup() %>%
group_by(BIOMARKER, VESSEL) %>%
nest() %>%
mutate(maxSW = map(data, ~.x %>% summarize(max_value = max(SW, na.rm = TRUE)))) %>%
unnest(maxSW) %>%
rename(gShapiroWilks = max_value) %>%
mutate(TEST = if_else(gShapiroWilks < 0.05, "Wilcoxon Signed-Rank Test", "Paired T-Test")) %>%
mutate(model = if_else(TEST == "Paired T-Test",
map(data, ~t_test(data = .x, log2 ~ TIMEPOINT, paired = TRUE)),
map(data, ~wilcox_test(data = .x, log2 ~ TIMEPOINT, paired = TRUE)))) %>%
mutate(EffectSize = if_else(TEST == "Paired T-Test",
map(data, ~cohens_d(data = .x, log2 ~ TIMEPOINT, var.equal = TRUE, paired = TRUE)),
map(data, ~wilcox_effsize(data = .x, log2 ~ TIMEPOINT, paired = TRUE)))) %>%
mutate(model = map(model, ~.x %>% select(p)),
EffectSize = map(EffectSize, ~.x %>% select(c(effsize, magnitude)) %>% mutate(magnitude = as.character(magnitude)))) %>%
unnest(model, EffectSize) %>%
mutate(`Effect Size Test` = if_else(TEST == "Paired T-Test", "Cohen's D", "Wilcoxon effect size (r)")) %>%
rename(pvalue = p) %>%
select(!gShapiroWilks)
View(df_test)
View(df_test[[3]][[1]])
View(df_test)
View(df_test[[3]][[1]])
View(df_test[[3]][[1]])
test <- df_test %>%
mutate(FC = map(data, ~.x %>%
select(!c(SIGN, SW)) %>%
pivot_wider(names_from = TIMEPOINT, values_from = log2)))
View(test)
View(test[[3]][[1]])
View(test[[9]][[1]])
# Creating fold change data for the arterial plasma proteome from Pre-WLST to Post-WLST
temp <- df_av_temp %>%
mutate(FC = map(data, ~.x %>%
group_by(TIMEPOINT) %>%
summarize(mean = mean(log2)) %>%
pivot_wider(names_from = "TIMEPOINT", values_from = "mean") %>%
mutate(FC = Post - Pre) %>%
select(FC))) %>%
unnest(FC)
View(temp)
test <- df_test %>%
mutate(FC = map(data, ~.x %>%
select(!c(SIGN, SW)) %>%
pivot_wider(names_from = TIMEPOINT, values_from = log2))) %>%
select(BIOMARKER, VESSEL, FC) %>%
unnest(FC)
View(test)
View(test)
# Overwriting the previous dataframe to analyze the difference between Pre-WLST to Post-WLST samples using only arterial samples
df <- df %>%
filter(TIMEPOINT %in% c("Pre", "Post")) %>%
filter(VESSEL == "Arterial") %>%
mutate(TIMEPOINT = factor(TIMEPOINT,
levels = c("Pre", "Post"),
ordered = TRUE)) %>%
unnest(data) %>%
## Have to exclude HIBI 25 because it does not have paired samples for this analysis
filter(ID != "HIBI 25") %>%
ungroup() %>%
group_by(BIOMARKER, VESSEL) %>%
nest() %>%
mutate(maxSW = map(data, ~.x %>% summarize(max_value = max(SW, na.rm = TRUE)))) %>%
unnest(maxSW) %>%
rename(gShapiroWilks = max_value) %>%
mutate(TEST = if_else(gShapiroWilks < 0.05, "Wilcoxon Signed-Rank Test", "Paired T-Test")) %>%
mutate(model = if_else(TEST == "Paired T-Test",
map(data, ~t_test(data = .x, log2 ~ TIMEPOINT, paired = TRUE)),
map(data, ~wilcox_test(data = .x, log2 ~ TIMEPOINT, paired = TRUE)))) %>%
mutate(EffectSize = if_else(TEST == "Paired T-Test",
map(data, ~cohens_d(data = .x, log2 ~ TIMEPOINT, var.equal = TRUE, paired = TRUE)),
map(data, ~wilcox_effsize(data = .x, log2 ~ TIMEPOINT, paired = TRUE)))) %>%
mutate(model = map(model, ~.x %>% select(p)),
EffectSize = map(EffectSize, ~.x %>% select(c(effsize, magnitude)) %>% mutate(magnitude = as.character(magnitude)))) %>%
unnest(model, EffectSize) %>%
mutate(`Effect Size Test` = if_else(TEST == "Paired T-Test", "Cohen's D", "Wilcoxon effect size (r)")) %>%
rename(pvalue = p) %>%
select(!gShapiroWilks)
df <- df %>%
mutate(FC = map(data, ~.x %>%
select(!c(SIGN, SW)) %>%
pivot_wider(names_from = TIMEPOINT, values_from = log2))) %>%
select(BIOMARKER, VESSEL, FC) %>%
unnest(FC) %>%
rename(Post_log2 = Post,
Pre_log2 = Pre)
View(df)
# Exponentiating the data then determining the delta. art_c stands for change in arterial
test <- df %>%
mutate(Post_abs = 2^Post_log2,
Pre_abs = 2^Pre_log2,
art_c = if_else(!is.na(Post_abs) & !is.na(Pre_abs), Post_abs-Pre_abs, NA))
View(test)
fig <- test %>%
ggplot(., aes(x = art_c, y = BIOMARKER)) +
geom_vline(xintercept = 0) +
geom_point() +
mutate(ABS = 2^log2) %>%
select(!log2) %>%
pivot_wider(names_from = VESSEL, values_from = ABS) %>%
mutate(AV = if_else(!is.na(Arterial) & !is.na(Jugular), Arterial-Jugular, NA)) %>%
pivot_longer(c(Arterial, Jugular, AV), names_to = "VESSEL", values_to = "ABS") %>%
mutate(SIGN = if_else(VESSEL == "AV" & ABS > 0, "Uptake", NA),
SIGN = if_else(VESSEL == "AV" & ABS < 0, "Release", SIGN),
log2 = log2(abs(ABS)),
log2 = if_else(SIGN == "Release" & log2 > 1, -1*log2, log2),
log2 = if_else(is.na(SIGN), log2(abs(ABS)), log2),
log2 = if_else(ABS == 0, 0, log2)) %>%
filter(!is.na(ABS))
# Exponentiating the data then determining the delta. art_c stands for change in arterial
test <- df %>%
mutate(Post_abs = 2^Post_log2,
Pre_abs = 2^Pre_log2,
art_c = if_else(!is.na(Post_abs) & !is.na(Pre_abs), Post_abs-Pre_abs, NA))
fig <- test %>%
ggplot(., aes(x = art_c, y = BIOMARKER)) +
geom_vline(xintercept = 0) +
geom_point() +
mutate(ABS = 2^log2) %>%
select(!log2) %>%
pivot_wider(names_from = VESSEL, values_from = ABS) %>%
mutate(AV = if_else(!is.na(Arterial) & !is.na(Jugular), Arterial-Jugular, NA)) %>%
pivot_longer(c(Arterial, Jugular, AV), names_to = "VESSEL", values_to = "ABS") %>%
mutate(SIGN = if_else(VESSEL == "AV" & ABS > 0, "Uptake", NA),
SIGN = if_else(VESSEL == "AV" & ABS < 0, "Release", SIGN),
log2 = log2(abs(ABS)),
log2 = if_else(SIGN == "Release" & log2 > 1, -1*log2, log2),
log2 = if_else(is.na(SIGN), log2(abs(ABS)), log2),
log2 = if_else(ABS == 0, 0, log2)) %>%
filter(!is.na(ABS))
View(df)
fig <- test %>%
ggplot(., aes(x = art_c, y = BIOMARKER)) +
geom_vline(xintercept = 0) +
geom_point()
fig
# Exponentiating the data then determining the delta. art_c stands for change in arterial
test <- df %>%
mutate(Post_abs = 2^Post_log2,
Pre_abs = 2^Pre_log2,
art_c = if_else(!is.na(Post_abs) & !is.na(Pre_abs), Post_abs-Pre_abs, NA),
SIGN = if_else(art_c < 0, -1, 1),
art_c_log2 = -1*log2(art_c*SIGN)))
# Exponentiating the data then determining the delta. art_c stands for change in arterial
test <- df %>%
mutate(Post_abs = 2^Post_log2,
Pre_abs = 2^Pre_log2,
art_c = if_else(!is.na(Post_abs) & !is.na(Pre_abs), Post_abs-Pre_abs, NA),
SIGN = if_else(art_c < 0, -1, 1),
art_c_log2 = -1*log2(art_c*SIGN))
View(test)
View(test)
# Exponentiating the data then determining the delta. art_c stands for change in arterial
test <- df %>%
mutate(Post_abs = 2^Post_log2,
Pre_abs = 2^Pre_log2,
art_c = if_else(!is.na(Post_abs) & !is.na(Pre_abs), Post_abs-Pre_abs, NA),
SIGN = case_when(
art_c = 0 ~ 0,
art_c > 0 & art_c < 1 ~ -1,
art_c < 0 & art_c > -1 ~ 1,
art_c > 1 ~ 1,
art_c < -1 ~ -1
))
# Exponentiating the data then determining the delta. art_c stands for change in arterial
test <- df %>%
mutate(Post_abs = 2^Post_log2,
Pre_abs = 2^Pre_log2,
art_c = if_else(!is.na(Post_abs) & !is.na(Pre_abs), Post_abs-Pre_abs, NA),
SIGN = case_when(
art_c = 0 ~ 0,
(art_c > 0 & art_c < 1) ~ -1,
(art_c < 0 & art_c > -1) ~ 1,
art_c > 1 ~ 1,
art_c < -1 ~ -1
))
# Exponentiating the data then determining the delta. art_c stands for change in arterial
test <- df %>%
mutate(Post_abs = 2^Post_log2,
Pre_abs = 2^Pre_log2,
art_c = if_else(!is.na(Post_abs) & !is.na(Pre_abs), Post_abs-Pre_abs, NA),
SIGN = case_when(
art_c == 0 ~ 0,
(art_c > 0 & art_c < 1) ~ -1,
(art_c < 0 & art_c > -1) ~ 1,
art_c > 1 ~ 1,
art_c < -1 ~ -1
))
View(test)
# Exponentiating the data then determining the delta. art_c stands for change in arterial
test <- df %>%
mutate(Post_abs = 2^Post_log2,
Pre_abs = 2^Pre_log2,
art_c = if_else(!is.na(Post_abs) & !is.na(Pre_abs), Post_abs-Pre_abs, NA),
SIGN = case_when(
art_c == 0 ~ 0,
(art_c > 0 & art_c < 1) ~ -1,
(art_c < 0 & art_c > -1) ~ 1,
art_c > 1 ~ 1,
art_c < -1 ~ -1
),
art_c_log2 = case_when(
SIGN == 0 ~ 0,
(art_c > 0 | art_c < 0) ~ SIGN*log2(art_c*SIGN)
))
View(test)
# Exponentiating the data then determining the delta. art_c stands for change in arterial
test <- df %>%
mutate(Post_abs = 2^Post_log2,
Pre_abs = 2^Pre_log2,
art_c = if_else(!is.na(Post_abs) & !is.na(Pre_abs), Post_abs-Pre_abs, NA))
View(test)
# Exponentiating the data then determining the delta. art_c stands for change in arterial
df <- df %>%
mutate(Post_abs = 2^Post_log2,
Pre_abs = 2^Pre_log2,
art_c = if_else(!is.na(Post_abs) & !is.na(Pre_abs), Post_abs-Pre_abs, NA))
# Reading in the names of the CNS 120 Biomarkers from Alamar
tags <- read_excel(path = tags) %>%
select(Gene, Category) %>%
rename(BIOMARKER = Gene)
# Merging the CNS panel tags onto the existing data
df <- df %>% merge(tags, all = TRUE)
View(df)
View(df)
unique(df$Category)
# Only selecting the biomarkers that involve inflammation, vascular, or vascular and metabolism
test <- df %>%
filter(Category %in% c("Inflammation", "Vascular", "Vascular and Metabolism")) %>%
relocate(Category, Biomarker) %>%
arrange(Category, Biomarker)
# Only selecting the biomarkers that involve inflammation, vascular, or vascular and metabolism
test <- df %>%
filter(Category %in% c("Inflammation", "Vascular", "Vascular and Metabolism")) %>%
relocate(Category, BIOMARKER) %>%
arrange(Category, BIOMARKER)
View(test)
write_csv(df, file = "C:/Users/Rebecca/Desktop/Dal/alamar_arterial.csv")
# Only selecting the biomarkers that involve inflammation, vascular, or vascular and metabolism
df <- df %>%
filter(Category %in% c("Inflammation", "Vascular", "Vascular and Metabolism")) %>%
relocate(Category, BIOMARKER) %>%
arrange(Category, BIOMARKER)
write_csv(df, file = "C:/Users/Rebecca/Desktop/Dal/alamar_arterial.csv")
get_wd()
getwd()
